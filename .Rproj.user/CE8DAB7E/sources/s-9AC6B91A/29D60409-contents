library(shiny)
library(plotly)
library(dplyr)
library(DT)
library(shinythemes)
source("getdata.R")

sitelist<-c(unique(data$site))

ui <- fluidPage(theme = shinytheme("sandstone"),
 titlePanel("Taste and Odor Causing Compounds"),
  sidebarLayout(
    sidebarPanel(
      dateRangeInput("dates","Select Date Range",
                     start="2013-10-01",
                     end = (Sys.Date())),
      
      checkboxGroupInput("station", "Select USGS Stations", choices = sitelist, selected =sitelist),
      actionLink("selectall", "Select All"),
      
      tags$br(),
      tags$br(), 
      
      # Button
      downloadButton("downloadData", "Download Selected Data")
      
                         
   ),
    mainPanel(dataTableOutput("table"))
    )
  )

server <- function(input, output, session) {

 observe({
    #if(input$selectall == 0) return(NULL) 
    if (input$selectall%%2 == 0)
    {
    updateCheckboxGroupInput(session,"station", "Select USGS Stations", sitelist,selected=sitelist)
    }
    else
    {
    updateCheckboxGroupInput(session,"station", "Select USGS Stations", sitelist)
    }
  })


  datasetInput<- reactive({
    data %>%
    filter(date >= input$dates[1],
           date <= input$dates[2],
           site %in% input$station)
    
  })

  cols<-c("Date", "Time", "Station Number", "Station Name", "Sampling Depth (ft)", "Total Manganese concentration (ug/L",
          "Remark Code, Geosmin", "Geosmin (ng/L)", "Remark Code, MIB", "MIB (ng/L)", "Remark Code, Microcystin", "Total Microcystin (ug/L)")
  
    output$table<- renderDataTable({  
    datatable(datasetInput(),
    colnames = cols ) %>%
      formatStyle(names(data), `text-align` = 'center')
       })
   
  
   # Downloadable csv of selected dataset ----
   output$downloadData <- downloadHandler(
     filename = function() {
       paste("data", Sys.Date(), ".csv", sep = "")
     },
     content = function(file) {
       write.table(datasetInput(), file, sep = ",",  row.names = FALSE, col.names = c("Date", "Time", "Station Number", "Station Name", "Sampling Depth (ft)", "Total Manganese concentration (ug/L",
                                                                                      "Remark Code, Geosmin", "Geosmin (ng/L)", "Remark Code, MIB", "MIB (ng/L)", "Remark Code, Microcystin", "Total Micorcystin (ug/L)"))
     }
   )

}

shinyApp(ui, server)